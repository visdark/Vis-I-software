//flex布局插件 - 版权：visdark

// 函数名FLEX 属性 宽度
.flex {
  display: flex;
  //排列方式
  //row（默认值）：主轴为水平方向，起点在左端。
  //row-reverse：主轴为水平方向，起点在右端。
  //column：主轴为垂直方向，起点在上沿。
  //column-reverse：主轴为垂直方向，起点在下沿。
  &.flex-r {
    flex-direction: row;
  }
  &.flex-r-r {
    flex-direction: row-reverse;
  }
  &.flex-c {
    flex-direction: column;
  }
  &.flex-c-r {
    flex-direction: column-reverse;
  }
  //（1）nowrap（默认）：不换行。 （2）wrap：换行，第一行在上方。 （3）wrap-reverse：换行，第一行在下方。换行方式
  &.flex-w-n {
    flex-wrap: nowrap;
  }
  &.flex-w {
    flex-wrap: wrap;
  }
  &.flex-w-r {
    flex-wrap: wrap-reverse;
  }
  //对齐方式
  //flex-start（默认值）：左对齐
  //flex-end：右对齐
  //center： 居中
  //space-between：两端对齐，项目之间的间隔都相等。
  //space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
  &.flex-x {
    &-f-s {
      justify-content: flex-start;
    }
    &-f-e {
      justify-content: flex-end;
    }
    &-f-c {
      justify-content: center;
    }
    &-f-s-b {
      justify-content: space-between;
    }
    &-f-s-a {
      justify-content: space-around;
    }
  }
  //flex-start：交叉轴的起点对齐。
  //        flex-end：交叉轴的终点对齐。
  //        center：交叉轴的中点对齐。
  //baseline: 项目的第一行文字的基线对齐。
  //stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
  &.flex-y {
    &-f-s {
      align-items: flex-start;
    }
    &-f-e {
      align-items: flex-end;
    }
    &-f-c {
      align-items: center;
    }
    &-f-s-b {
      align-items: baseline;
    }
    &-f-s-a {
      align-items: stretch;
    }
  }
  //flex-start：与交叉轴的起点对齐。
  //        flex-end：与交叉轴的终点对齐。
  //        center：与交叉轴的中点对齐。
  //        space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
  //        space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
  //        stretch（默认值）：轴线占满整个交叉轴。
  &.flex-xy {
    &-f-s {
      align-content: flex-start;
    }
    &-f-e {
      align-content: flex-end;
    }
    &-f-c {
      align-content: center;
    }
    &-f-s-b {
      align-content: space-between;
    }
    &-f-s-a {
      align-content: space-around;
    }
    &-f-n {
      align-content: stretch;
    }
  }
  // 元素开始 这个是重置序列位置 与JS相关,一般只设置前面几个重要的一般是4个
  //
  .item(@o:1){
    order: @o;
  }
}


// 十二格子 flex排列属性
.col{
  flex: 1 1 auto;
}
.col(12);
.col(@col, @i: 1) when (@i =< @col) {
  .col-@{i} {
    flex: 0 0 (@i/12);
    max-width: (@i/12)*100%;
  }
  .col(@col, (@i + 1));
}
.col-10vw {
  flex: 0 0 10vw;
  max-width: 10vw;
}
.col-1vw {
  flex: 0 0 1vw;
  max-width: 1vw;
}